# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductEntity {
  id: String!
  price: Float!
  user_id: String!
  quantity: Float!
  title: String!
  description: String
  image: [String!]!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CategoryEntity {
  id: String!
  name: String!
  children: [CategoryEntity!]
  parent: CategoryEntity
}

type AddressEntity {
  address_1: String!
  address_2: String!
  city: String!
  state: String!
  country: String!
  zip: Float!
}

type UserEntity {
  id: String!
  seller: Boolean!
  name: String!
  email: String!
  password: String!
  gateway_customer_id: String!
  created_at: DateTime!
  updated_at: DateTime!
  address: AddressEntity!
}

type MeSchema {
  id: String!
  seller: Boolean!
  name: String!
  email: String!
  address: AddressEntity
}

type AuthTokenSchema {
  id: String!
  name: String!
  token: String!
}

type RegisterUserSchema {
  id: String!
  seller: Boolean!
  name: String!
  email: String!
}

type Query {
  users: UserEntity!
  me: MeSchema!
  products: [ProductEntity!]!
  showProduct(id: String!): ProductEntity!
  categories: [CategoryEntity!]!
  showCategory(id: String!): CategoryEntity!
}

type Mutation {
  login(data: LoginUserInput!): AuthTokenSchema!
  register(data: RegisterUserInput!): RegisterUserSchema!
  createProduct(data: CreateProductInput!): ProductEntity!
  updateProduct(id: String!, data: CreateProductInput!): ProductEntity!
  deleteProduct(id: String!): ProductEntity!
  createCategory(data: CreateCategoryInput!): CategoryEntity!
  updateCategory(id: Float!, data: CreateCategoryInput!): CategoryEntity!
  deleteCategory(id: String!): CategoryEntity!
}

input LoginUserInput {
  email: String!
  password: String!
}

input RegisterUserInput {
  email: String!
  password: String!
  name: String!
  password_confirmation: String!
  seller: Boolean!
}

input CreateProductInput {
  price: Float!
  quantity: Float = 1
  title: String!
  description: String
  image: [String!]!
}

input CreateCategoryInput {
  children: [String!]
  parent: String
  name: String!
}
